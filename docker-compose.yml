version: "3.8"

services:
  # Front - prod (build)
  front:
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: front
    ports:
      - "8000:80"
    networks:
      - front
    restart: on-failure
    profiles:
      - prod

  # Front - dev (live server)
  front_dev:
    build:
      context: ./front
      dockerfile: Dockerfile.dev
    container_name: front_dev
    volumes:
      - /app/node_modules
      - type: bind
        source: ./front/app
        target: /app
    ports:
      - "8000:8000"
    networks:
      - front
    restart: on-failure
    profiles:
      - dev

  # Back - authentification
  authentification:
    build:
      context: ./authentification
      dockerfile: Dockerfile
    container_name: authentification
    ports:
      - "8001:8001"
    volumes:
      - ./authentification:/app
    networks:
      - back
    depends_on:
      - data_base
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST} # Utilisez le nom du service comme hôte
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - URL=${URL}
    restart: on-failure

  profile:
    build:
      context: ./profile
      dockerfile: Dockerfile
    container_name: profile
    ports:
      - "8002:8002"
    networks:
      - back
    depends_on:
      - data_base
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST} # Utilisez le nom du service comme hôte
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - URL=${URL}
    restart: on-failure

  # Back - data base
  data_base:
    build:
      context: ./data_base
      dockerfile: Dockerfile
    container_name: data_base
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - URL=${URL}
    ports:
      - "5432:5432"
    volumes:
      - data_base_data:/var/lib/postgresql/data
    restart: always
    networks:
      - back

  # Back - api gateway
  # api_gateway:
  #   build:
  #     context: ./api_gateway
  #     dockerfile: Dockerfile
  #   container_name: api_gateway
  #   ports:
  #     - "5000:5000"
  #   networks:
  #     - back
  #   depends_on:
  #     - authentification
  #     - profile
  #     - data_base
  #   restart: on-failure

  friendship:
    build:
      context: ./friendship
      dockerfile: Dockerfile
    container_name: friendship
    ports:
      - "8003:8003"
    networks:
      - back
    depends_on:
      - data_base
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - URL=${URL}
    restart: on-failure

  statistic:
    build:
      context: ./statistic
      dockerfile: Dockerfile
    container_name: statistic
    ports:
      - "8004:8004"
    networks:
      - back
    depends_on:
      - data_base
    restart: on-failure

volumes:
  data_base_data:

networks:
  front:
    driver: bridge
  back:
    driver: bridge
