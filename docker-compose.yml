version: '3'

services:

    # Serveur web
    nginx:
      build:
        context: ./server/Docker
        dockerfile: Dockerfile
      ports:
        - "8000:8000"
      networks:
        - server
      depends_on:
        - authentification
      restart: on-failure

    # Django Lucas
    authentification:
      build:
        context: ./authentification/Docker
        dockerfile: Dockerfile
      ports:
        - "8001:8000"
      volumes:
        - ./authentification:/app
      networks:
        - front
      depends_on:
        - profile
      restart: on-failure

    # Alessio
    profile:
      build:
        context: ./profile
        dockerfile: Dockerfile
      ports:
        - "8002:8000"
      networks:
        - front
      depends_on:
        - data_base
      restart: on-failure


    # Data base PostGreSQL
    data_base:
      build:
        context: ./data_base/Docker
        dockerfile: Dockerfile
      env_file:
        - .env
      volumes:
        - data_base:/var/lib/postgresql/data
      # environment:
      #   - POSTGRES_DB: $POSTGRES_DB
      #   - POSTGRES_USER: $POSTGRES_USER
      #   - POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      networks:
        - data_base
      restart: on-failure


    api_gateway:
      build:
        context: ./api_gateway
        dockerfile: Dockerfile
      ports:
        - "5000:5000"
      depends_on:
        - authentification
        - profile
      restart: on-failure

volumes:
  data_base:
    name: data_base
    driver: local # ici nous stockons le volume en local
    driver_opts:
      type: 'none' # aucun type specifique
      o: 'bind' # on monte le volume directement sur le chemin ./src/front/public:/app
      device: data_base

networks:
  server:
    driver: bridge
  front:
    driver: bridge
  data_base:
    driver: bridge